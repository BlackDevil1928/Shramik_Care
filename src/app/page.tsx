'use client';

import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import VoiceInterface from '@/components/voice/VoiceInterface';
import Navigation from '@/components/ui/Navigation';
import RealKeralaMap from '@/components/maps/RealKeralaMap';
import HealthStats from '@/components/dashboard/HealthStats';
import type { Language } from '@/types';

const HomePage = () => {
  const [currentLanguage, setCurrentLanguage] = useState<Language>('en');
  const [isKioskMode, setIsKioskMode] = useState(false);
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
    // Detect if we're in kiosk mode (larger screen, specific URL param, etc.)
    const params = new URLSearchParams(window.location.search);
    if (params.get('mode') === 'kiosk') {
      setIsKioskMode(true);
      document.body.classList.add('kiosk-mode');
    }

    // Auto-detect language based on browser or location
    const browserLang = navigator.language.split('-')[0] as Language;
    if (['hi', 'bn', 'or', 'ta', 'ne', 'ml'].includes(browserLang)) {
      setCurrentLanguage(browserLang);
    }
  }, []);

  const translations = {
    en: {
      title: "Kerala Migrant Health System",
      subtitle: "Voice-First Digital Health Records for Migrant Workers",
      description: "Register your health information through voice calls in your language. Get instant Migrant Health ID (MHI) and access to healthcare services across Kerala.",
      callToAction: "üìû Call Now to Register",
      emergencyContact: "üö® Emergency: Call 108",
      features: {
        voice: "Multi-language Voice AI",
        qr: "Digital Health ID with QR",
        map: "Real-time Disease Surveillance",
        anonymous: "Anonymous Health Reporting"
      },
      voicePrompt: "Click the microphone and speak in your language",
      phoneNumber: "+91-XXX-HEALTH (432584)",
      sdgTitle: "Supporting UN Sustainable Development Goals",
      sdgGoals: ["Good Health & Well-being", "Reduced Inequalities", "Sustainable Communities"]
    },
    hi: {
      title: "‡§ï‡•á‡§∞‡§≤ ‡§™‡•ç‡§∞‡§µ‡§æ‡§∏‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
      subtitle: "‡§™‡•ç‡§∞‡§µ‡§æ‡§∏‡•Ä ‡§∂‡•ç‡§∞‡§Æ‡§ø‡§ï‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§µ‡§æ‡§ú-‡§™‡§π‡§≤‡•Ä ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°",
      description: "‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§µ‡•â‡§Ø‡§∏ ‡§ï‡•â‡§≤ ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Ö‡§™‡§®‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§™‡•ç‡§∞‡§µ‡§æ‡§∏‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Ü‡§à‡§°‡•Ä (MHI) ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§ï‡•á‡§∞‡§≤ ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ‡§ì‡§Ç ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö ‡§™‡§æ‡§è‡§Ç‡•§",
      callToAction: "üìû ‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§≠‡•Ä ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç",
      emergencyContact: "üö® ‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤: 108 ‡§™‡§∞ ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç",
      features: {
        voice: "‡§¨‡§π‡•Å-‡§≠‡§æ‡§∑‡•Ä ‡§µ‡•â‡§Ø‡§∏ ‡§è‡§Ü‡§à",
        qr: "‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Ü‡§à‡§°‡•Ä",
        map: "‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§∏‡§Æ‡§Ø ‡§∞‡•ã‡§ó ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä",
        anonymous: "‡§Ö‡§®‡§æ‡§Æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü‡§ø‡§Ç‡§ó"
      },
      voicePrompt: "‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§´‡•ã‡§® ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§¨‡•ã‡§≤‡•á‡§Ç",
      phoneNumber: "+91-XXX-HEALTH (432584)",
      sdgTitle: "‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§∏‡§§‡§§ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§®",
      sdgGoals: ["‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§î‡§∞ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£", "‡§ï‡§Æ ‡§Ö‡§∏‡§Æ‡§æ‡§®‡§§‡§æ‡§è‡§Ç", "‡§ü‡§ø‡§ï‡§æ‡§ä ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø"]
    },
    ml: {
      title: "‡¥ï‡µá‡¥∞‡¥≥ ‡¥ï‡µÅ‡¥ü‡¥ø‡¥Ø‡µá‡¥±‡µç‡¥± ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø ‡¥∏‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡¥Ç",
      subtitle: "‡¥ï‡µÅ‡¥ü‡¥ø‡¥Ø‡µá‡¥±‡µç‡¥± ‡¥§‡µä‡¥¥‡¥ø‡¥≤‡¥æ‡¥≥‡¥ø‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µÅ‡¥≥‡µç‡¥≥ ‡¥µ‡µã‡¥Ø‡µç‡¥∏‡µç-‡¥´‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥°‡¥ø‡¥ú‡¥ø‡¥±‡µç‡¥±‡µΩ ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø ‡¥±‡µÜ‡¥ï‡µç‡¥ï‡µã‡µº‡¥°‡µÅ‡¥ï‡µæ",
      description: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥≠‡¥æ‡¥∑‡¥Ø‡¥ø‡µΩ ‡¥µ‡µã‡¥Ø‡µç‡¥∏‡µç ‡¥ï‡µã‡¥≥‡µÅ‡¥ï‡µæ ‡¥µ‡¥¥‡¥ø ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø ‡¥µ‡¥ø‡¥µ‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µº ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï. ‡¥§‡µΩ‡¥ï‡µç‡¥∑‡¥£‡¥Ç ‡¥Æ‡µà‡¥ó‡µç‡¥∞‡¥®‡µç‡¥±‡µç ‡¥π‡µÜ‡µΩ‡¥§‡µç‡¥§‡µç ‡¥ê‡¥°‡¥ø (MHI) ‡¥®‡µá‡¥ü‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ï‡µá‡¥∞‡¥≥‡¥§‡µç‡¥§‡¥ø‡¥≤‡µÅ‡¥ü‡¥®‡µÄ‡¥≥‡¥Ç ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø ‡¥∏‡µá‡¥µ‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥Ü‡¥ï‡µç‡¥∏‡¥∏‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï.",
      callToAction: "üìû ‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µº ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡µª ‡¥á‡¥™‡µç‡¥™‡µã‡µæ ‡¥µ‡¥ø‡¥≥‡¥ø‡¥ï‡µç‡¥ï‡µÇ",
      emergencyContact: "üö® ‡¥Ö‡¥§‡µç‡¥Ø‡¥æ‡¥π‡¥ø‡¥§‡¥Ç: 108 ‡µΩ ‡¥µ‡¥ø‡¥≥‡¥ø‡¥ï‡µç‡¥ï‡µÇ",
      features: {
        voice: "‡¥Æ‡µæ‡¥ü‡µç‡¥ü‡¥ø-‡¥≤‡¥æ‡¥Ç‡¥ó‡µç‡¥µ‡µá‡¥ú‡µç ‡¥µ‡µã‡¥Ø‡µç‡¥∏‡µç AI",
        qr: "QR ‡¥â‡¥≥‡µç‡¥≥ ‡¥°‡¥ø‡¥ú‡¥ø‡¥±‡µç‡¥±‡µΩ ‡¥π‡µÜ‡µΩ‡¥§‡µç‡¥§‡µç ‡¥ê‡¥°‡¥ø",
        map: "‡¥§‡¥§‡µç‡¥∏‡¥Æ‡¥Ø ‡¥∞‡µã‡¥ó ‡¥®‡¥ø‡¥∞‡µÄ‡¥ï‡µç‡¥∑‡¥£‡¥Ç",
        anonymous: "‡¥Ö‡¥ú‡µç‡¥û‡¥æ‡¥§ ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø ‡¥±‡¥ø‡¥™‡µç‡¥™‡µã‡µº‡¥ü‡µç‡¥ü‡¥ø‡¥Ç‡¥ó‡µç"
      },
      voicePrompt: "‡¥Æ‡µà‡¥ï‡µç‡¥∞‡µã‡¥´‡µã‡¥£‡¥ø‡µΩ ‡¥ï‡µç‡¥≤‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥≠‡¥æ‡¥∑‡¥Ø‡¥ø‡µΩ ‡¥∏‡¥Ç‡¥∏‡¥æ‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
      phoneNumber: "+91-XXX-HEALTH (432584)",
      sdgTitle: "‡¥Ø‡µÅ‡¥é‡µª ‡¥∏‡¥∏‡µç‡¥±‡µç‡¥±‡µÜ‡¥Ø‡¥ø‡¥®‡¥¨‡¥ø‡µæ ‡¥°‡µÜ‡¥µ‡¥≤‡¥™‡µç‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥ó‡µã‡¥≥‡µÅ‡¥ï‡¥≥‡µÜ ‡¥™‡¥ø‡¥®‡µç‡¥§‡µÅ‡¥£‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ",
      sdgGoals: ["‡¥®‡¥≤‡µç‡¥≤ ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø‡¥µ‡µÅ‡¥Ç ‡¥ï‡µç‡¥∑‡µá‡¥Æ‡¥µ‡µÅ‡¥Ç", "‡¥ï‡µÅ‡¥±‡¥û‡µç‡¥û ‡¥Ö‡¥∏‡¥Æ‡¥§‡µç‡¥µ‡¥ô‡µç‡¥ô‡µæ", "‡¥∏‡µÅ‡¥∏‡µç‡¥•‡¥ø‡¥∞ ‡¥ï‡¥Æ‡µç‡¥Æ‡µç‡¥Ø‡µÇ‡¥£‡¥ø‡¥±‡µç‡¥±‡¥ø‡¥ï‡µæ"]
    }
  };

  const currentTranslation = translations[currentLanguage as keyof typeof translations] || translations.en;

  if (!mounted) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-kerala-teal to-neon-blue">
        <div className="text-white text-2xl animate-pulse">
          Loading Kerala Health System...
        </div>
      </div>
    );
  }

  return (
    <div className={`min-h-screen ${isKioskMode ? 'kiosk-mode' : ''}`}>
      {/* Navigation */}
      <Navigation 
        currentLanguage={currentLanguage}
        onLanguageChange={setCurrentLanguage}
      />

      {/* Hero Section */}
      <section className="relative px-4 md:px-6 pb-12">
        <div className="max-w-7xl mx-auto">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            {/* Left Column - Content */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              className="space-y-6"
            >
              <div className="space-y-4">
                <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 leading-tight">
                  {currentTranslation.title}
                </h1>
                <h2 className="text-xl md:text-2xl text-gray-700 font-medium">
                  {currentTranslation.subtitle}
                </h2>
                <p className="text-lg text-gray-600 leading-relaxed">
                  {currentTranslation.description}
                </p>
              </div>

              {/* Main CTA Buttons */}
              <div className="space-y-4">
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="w-full sm:w-auto bg-gradient-to-r from-kerala-teal to-neon-blue text-white font-semibold py-4 px-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 animate-pulse-neon text-lg"
                  onClick={() => window.open('tel:+91XXXHEALTH', '_self')}
                >
                  {currentTranslation.callToAction}
                </motion.button>

                <div className="text-center sm:text-left">
                  <p className="text-sm text-gray-500 mb-2">
                    {currentTranslation.voicePrompt}
                  </p>
                  <p className="text-2xl font-mono text-kerala-teal font-bold">
                    {currentTranslation.phoneNumber}
                  </p>
                </div>
              </div>

              {/* Voice Interface Component */}
              <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-lg border border-white/20">
                <VoiceInterface 
                  language={currentLanguage}
                  onHealthRecordCreated={(record) => {
                    console.log('Health record created:', record);
                    // Handle success - show MHI, redirect, etc.
                  }}
                />
              </div>

              {/* Features Grid */}
              <div className="grid grid-cols-2 gap-4 pt-6">
                {Object.entries(currentTranslation.features).map(([key, value], index) => (
                  <motion.div
                    key={key}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: 0.4 + index * 0.1 }}
                    className="health-card p-4 text-center"
                  >
                    <div className="text-2xl mb-2">
                      {key === 'voice' && 'üé§'}
                      {key === 'qr' && 'üì±'}
                      {key === 'map' && 'üó∫Ô∏è'}
                      {key === 'anonymous' && 'üîí'}
                    </div>
                    <p className="text-sm font-medium text-gray-700">{value}</p>
                  </motion.div>
                ))}
              </div>
            </motion.div>

            {/* Right Column - 3D Kerala Globe */}
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.8, delay: 0.3 }}
              className="relative"
            >
              <div className="map-container aspect-square max-w-lg mx-auto">
                <RealKeralaMap />
              </div>
            </motion.div>
          </div>
        </div>
      </section>

      {/* Health Statistics Section */}
      <section className="px-4 md:px-6 py-12 bg-white/50 backdrop-blur-sm">
        <div className="max-w-7xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.5 }}
          >
            <HealthStats />
          </motion.div>
        </div>
      </section>

      {/* UN SDG Section */}
      <section className="px-4 md:px-6 py-12">
        <div className="max-w-4xl mx-auto text-center">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.6 }}
            className="space-y-6"
          >
            <h3 className="text-2xl md:text-3xl font-bold text-gray-900">
              {currentTranslation.sdgTitle}
            </h3>
            
            <div className="grid md:grid-cols-3 gap-6">
              {currentTranslation.sdgGoals.map((goal, index) => (
                <div key={index} className="health-card p-6">
                  <div className="text-4xl mb-4">
                    {index === 0 && 'üè•'}
                    {index === 1 && '‚öñÔ∏è'}
                    {index === 2 && 'üå±'}
                  </div>
                  <p className="font-semibold text-gray-800">{goal}</p>
                </div>
              ))}
            </div>
          </motion.div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-8">
        <div className="max-w-7xl mx-auto px-4 md:px-6">
          <div className="grid md:grid-cols-3 gap-8">
            <div>
              <h4 className="font-semibold mb-4">Emergency Contacts</h4>
              <ul className="space-y-2 text-sm">
                <li>üö® Emergency: 108</li>
                <li>üè• Health Helpline: 104</li>
                <li>üëÆ Police: 100</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">Support</h4>
              <ul className="space-y-2 text-sm">
                <li>üìû Voice Support: 24/7</li>
                <li>üí¨ Multi-language Help</li>
                <li>üîí Privacy Protected</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">Government of Kerala</h4>
              <p className="text-sm">
                Health Service Department<br />
                Thiruvananthapuram, Kerala<br />
                India - 695001
              </p>
            </div>
          </div>
          
          <div className="border-t border-gray-700 mt-8 pt-8 text-center text-sm">
            <p>&copy; 2024 Government of Kerala. All rights reserved. | Privacy Policy | Terms of Service</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default HomePage;